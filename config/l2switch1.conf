#server.debugging=True
module.jsonrpcserver.ovsdb=True
module.jsonrpcserver.client=True
module.jsonrpcserver.url='unix:///usr/local/var/run/openvswitch/db.sock'
module.httpserver.url=None
module.httpserver.vhost.api.url='tcp://localhost:8081'
#module.httpserver.vhost.docker.url='unix:///run/docker/plugins/vlcp.sock'
#module.console.startinconsole=True
server.logging.version=1
server.logging.formatters={'fileFormatter':{'format':'%(asctime)s %(levelname)s %(name)s: %(message)s'}}
server.logging.handlers={'fileHandler':{'class':'logging.handlers.TimedRotatingFileHandler',
                                        'formatter':'fileFormatter',
                                        'filename':'/var/log/vlcp.log',
                                        'when':'midnight',
                                        'interval':1,
                                        'backupCount':7},
                         'fileHandler2':{'class':'logging.FileHandler',
                                        'formatter':'fileFormatter',
                                        'filename':'/var/log/vlcp.error.log',
                                        'level':'WARNING'}}
server.logging.root={'level':'INFO',
                     'handlers':['fileHandler','fileHandler2']}
#protocol.openflow.debugging = True
#protocol.redis.debugging = True

module.l2switch.learning=True
module.l2switch.nxlearn=True

module.vxlancast.learning=False
module.vxlancast.prepush=True
server.startup = ('vlcp.service.sdn.viperflow.ViperFlow',
                  'vlcp.service.sdn.ioprocessing.IOProcessing',
                  'vlcp.service.sdn.l2switch.L2Switch',
                  'vlcp.service.manage.modulemanager.Manager',
                  'vlcp.service.manage.webapi.WebAPI',
                  'vlcp.service.utils.autoload.AutoLoad',
                  'vlcp.service.sdn.vxlancast.VXLANCast',
                  #'vlcp.service.sdn.arpresponder.ARPResponder',
                  #'vlcp.service.sdn.dhcpserver.DHCPServer',
                  #'vlcp.service.sdn.vrouterapi.VRouterApi',
                  #'vlcp.service.sdn.icmpresponder.ICMPResponder',
                  #'vlcp.service.sdn.l3router.L3Router',
                  #'vlcp_docker.dockerplugin.DockerPlugin'
                  )

module.redisdb.url='tcp://172.17.0.4/'
